/**
 * @module adapter/blink-diff
 * @exports a promise for async/await.
 * @description
 * The blink-diff adapter.
 * Integrates blink-diff for image comparison.
 * It compares the regression item (the newly created screenshot)
 * and the reference item (the one set as reference).
 * It save the comparison result as difference item.
 * It sets the flag "match" on the data-object:
 * - true if the comparison is successfull (below threshold)
 * - false if the comparison is not successfull (above threshold)
 *
 * "A lightweight image comparison tool http://yahoo.github.io/blink-diff/"
 * @see https://github.com/yahoo/blink-diff
 *
 * @copyright 2016, 2017 Martin Krause <github@mkrause.info> (http://martinkr.github.io)
 * @license MIT license: https://opensource.org/licenses/MIT
 *
 * @author Martin Krause <github@mkrause.info>
 */

 // imports
const BlinkDiff = require("blink-diff");
// whoami
const currentModule = "adapter/blink-diff";

/**
 * Compares the reference_item and the regression_item (the new one).
 * Uses https://github.com/yahoo/blink-diff for the actual image comparison.
 * @async
 * @exports a promise for async/await.
 * @memberof module:adapter/blink-diff
 * @param {Object} item a data-object generated by ".data-object.js"
 * @returns {Object} a promise of the data-object with a new property "match", "true" if the images are the same - "false" otherwise
 */
module.exports = function (item) {
	return new Promise( (resolve)  => {
		/** Create a new BlinkDiff insance */
		const blinkDiff = new BlinkDiff({
			imageAPath: item.reference_item,
			imageBPath: item.regression_item,
			// composition: false,
			thresholdType: BlinkDiff.THRESHOLD_PERCENT,
			threshold: item.threshold, //0.01 = 1% threshold
			imageOutputPath: item.difference_item
		});

		/** run the actual comparison on the blink-diff instance */
		blinkDiff.run( (error, result) => {
			// i was not able to force BlinkDiff run to emit an error :D
			/* istanbul ignore if */
			if (error) {
				throw new Error(`${currentModule}: ${error}`);
			} else {
				// console.log(`${currentModule} result.code: ${result.code} / ${blinkDiff.hasPassed(result.code) ? 'Passed' : 'Failed'}. Found ${result.differences} differences.`);
				if ( blinkDiff.hasPassed(result.code) ) {
					//passed
					item.match = true;
					resolve(item);
				} else {
					// fail
					item.match = false;
					resolve(item);
				}
			}
		});

	});
};
